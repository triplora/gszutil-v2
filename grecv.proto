// Copyright 2019 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = false;
option java_package = "com.google.cloud.imf.gzos.pb";
option java_outer_classname = "GRecvProto";

package com.google.cloud.imf.gzos;

message Record {
  message Field {
    enum FieldType {
      UNKNOWN = 0;
      STRING = 1;
      INTEGER = 2;
      DECIMAL = 3;
      DATE = 4;
      UNSIGNED_INTEGER = 5;
      LATIN_STRING = 6;
    }
    string name = 1;
    FieldType typ = 2;
    int32 size = 3;
    int32 precision = 4;
    int32 scale = 5;
    bool filler = 6;
    message NullIf {
      string field = 1;
      bytes value = 2;
    }
    NullIf nullif = 7;
    FieldType cast = 8;
    string format = 9;
  }
  enum Source {
    UNKNOWN = 0;
    COPYBOOK = 1;
    LAYOUT = 2;
  }
  Source source = 1;
  string original = 2;
  repeated Field field = 3;
  string encoding = 4;
  bool vartext = 5;
  bytes delimiter = 6;
}

message ZOSJobInfo {
  string jobid = 1;
  string jobname = 2;
  string jobdate = 3;
  string jobtime = 4;
  string step_name = 5;
  string proc_step_name = 6;
  string user = 7;
}

message GRecvRequest {
  Record schema = 1;
  int32 lrecl = 2;
  int32 blksz = 3;
  string basepath = 4;
  double max_err_pct = 5;
  bytes publicKey = 6;
  bytes signature = 7;
  string principal = 8;
  ZOSJobInfo jobinfo = 9;
  int64 timestamp = 10;
}

service GRecv {
  rpc Write(stream WriteRequest) returns (GRecvResponse);
}

message WriteRequest {
  oneof payload {
    bytes data = 1;
    GRecvRequest request = 2;
  }
}

message GRecvResponse {
  int32 status = 1;
  int64 rowCount = 2;
  int64 msgCount = 3;
  int64 errCount = 4;
  string hash = 5;
}
